local dirtylarry = require "dirtylarry/dirtylarry"

local PlayFabClientApi = require("PlayFab.PlayFabClientApi")
local IPlayFabHttps = require("PlayFab.IPlayFabHttps")
local PlayFabHttps_Defold = require("PlayFab.PlayFabHttps_Defold")
IPlayFabHttps.SetHttp(PlayFabHttps_Defold)

PlayFabClientApi.settings.titleId = "7C5B6"

function init(self)
	msg.post(".", "acquire_input_focus")

	local loginRequest = {
		-- See the API reference for LoginWithCustomID
		TitleId = PlayFabClientApi.settings.titleId,
		CustomId = "GettingStartedGuide",
		CreateAccount = true
	}
	PlayFabClientApi.LoginWithCustomID(loginRequest, OnLoginSuccess, OnLoginFailed)		
end

function on_input(self, action_id, action)
	self.input_default  = dirtylarry:input("username", action_id, action, gui.KEYBOARD_TYPE_DEFAULT, "username")
	self.input_password = dirtylarry:input("password", action_id, action, gui.KEYBOARD_TYPE_PASSWORD, "password")
	dirtylarry:button("myButton", action_id, action, function ()
		print(self.input_default)
		print(self.input_password)
		local registerRequest = {
			-- See the API reference for LoginWithCustomID
			TitleId = PlayFabClientApi.settings.titleId,
			Email = "example@hotmail.com",
			Password = self.input_password,
			Username = self.input_default
		}
		PlayFabClientApi.RegisterPlayFabUser(registerRequest, OnRegisterSuccess, OnRegisterFailed)
	end)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function OnLoginSuccess(result)
	local s = gui.get_node("text")
	gui.set_text(s,"Congratulations, you made your first successful API call!")
end

function OnLoginFailed(error)
	local pfTestOutput = gui.get_node("myLabel/larrylabel")
	local message = "Something went wrong with your first API call.\n"
	local message = message .. "Here's some debug information:\n"
	local message = message .. error.GenerateErrorReport()
	gui.set_text(pfTestOutput, message)
end

function OnRegisterSuccess(result)
	--RegisterPlayFabUserResult
	print(result.EntityToken)
	print(result.PlayFabId)
	print(result.SessionTicket)
	print(result.SettingsForUser)
	print(result.Username)
end

function OnRegisterFailed(error)
	print(error.code)
	print(error.error)
	print(error.errorCode)
	print(error.errorDetails)
	print(error.errorMessage)
	print(error.status)
end